{"version":3,"file":"static/webpack/static/development/pages/upload-processing.js.f19797a2373b6ffc49b2.hot-update.js","sources":["webpack:///./pages/upload-processing.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport Link from 'next/link'\nimport Router from 'next/router';\n\nimport { Button } from 'react-bootstrap'\nimport Theme from '../components/Theme'\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props)\n    this.processing = true\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(()=> {\n      this.pollForDoneProcessing()\n      .then(() => {\n        // send to index page / render page\n        window.location = window.location.origin + `/?trial=${ this.trialName.replace('.zip', '') }`\n      })\n    }, 3000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n    this.timer = null\n  }\n\n  pollForDoneProcessing() {\n    if (!this.trialName) {\n      const urlParams = new URLSearchParams(window.location.search);\n      this.trialName = urlParams.get('trial');\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.open('GET', `/api/is-processing-complete/${ this.trialName }`);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n\n          if (xhr.status === 200) {\n            // success\n            resolve({\n              response: JSON.parse(xhr.responseText)\n            });\n          } else {\n            // fail\n            reject(xhr.status)\n          }\n        }\n      };\n      xhr.send();\n    });\n  }\n\n  render() {\n    return (\n      <Theme>\n        <span className=\"heading\">Upload Succeeded - ZIP file is now processing...</span>\n        <div id=\"preloader\" style={{ display: this.processing ? 'block' : 'none' }}>\n          <div className=\"spinner-sm spinner-sm-1\" id=\"status\"></div>\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default Upload;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;;;AA1DA;AACA;AA4DA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}