{"version":3,"file":"static/webpack/static/development/pages/upload.js.d4caf7fdbeeedb278cb0.hot-update.js","sources":["webpack:///./pages/upload.js"],"sourcesContent":["import React, { Component, useState } from 'react'\n\nimport Link from 'next/link'\nimport Router from 'next/router';\n\nimport { Button } from 'react-bootstrap'\nimport Theme from '../components/Theme'\n\nimport routes from '../../routes'\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      uploading: false\n    }\n  }\n\n  // upload to S3\n  handleFileChange(event) {\n    const files = event.target.files\n    const file = files[0]\n    if(file == null){\n      return alert('No file selected.')\n    }\n\n    this.setState({\n      uploading: true\n    })\n\n    this.getSignedRequest(file)\n      .then((options) => this.uploadFile(options))\n  };\n\n  getSignedRequest(file) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', `${routes.signS3}?file-name=${file.name}&file-type=${file.type}`);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            resolve({\n              file,\n              signedRequest: JSON.parse(xhr.responseText).signedRequest\n            });\n          } else {\n            reject(xhr.status)\n          }\n        }\n      };\n      xhr.send();\n    });\n\n  }\n\n  nameFromOptions(options) {\n    return options.file.name.replace('.zip','')\n  }\n  uploadFile(options) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('PUT', options.signedRequest);\n    xhr.onreadystatechange = () => {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200){\n          console.log('file', this.nameFromOptions(options))\n          Router.push(`/upload-processing?trial=${ this.nameFromOptions(options) }`)\n          // TODO - send to waiting page ?\n          // then when files processed, send to home page\n        }\n        else{\n          alert('Could not upload file.');\n        }\n      }\n    };\n    xhr.send(options.file);\n  }\n\n  render() {\n    return (\n      <Theme>\n        <span className=\"heading\">Please Choose a .zip file containing all CSVs for a Trial</span>\n        <span className=\"text\">The trial name will be the name of the .zip file</span>\n        <div id=\"preloader\" style={{ display: this.state.uploading ? 'block' : 'none' }}>\n          <div className=\"spinner-sm spinner-sm-1\" id=\"status\"></div>\n        </div>\n\n        <div className=\"input-group file-upload\">\n          <label className=\"input-group-btn\">\n            <span className=\"btn btn-primary\">\n                Browse&hellip; <input type=\"file\" style={{ display: 'none' }} onChange={(e) => this.handleFileChange(e)}/>\n            </span>\n          </label>\n          <input type=\"text\" className=\"form-control\" readOnly/>\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default Upload;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;;;;AAvFA;AACA;AAyFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}